{"version":3,"sources":["components/navbar.component.js","components/footer.component.js","components/index.component.js","components/warriors.component.js","components/corewars/instructions.js","components/corewars/canvas.component.js","components/play.component.js","components/newwarrior.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","style","backgroundColor","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","download","PureComponent","FooterComponent","IndexComponent","Warrior","props","warrior","name","commandList","length","date","substring","WarriorsComponent","state","warriors","console","log","this","axios","get","then","response","setState","data","catch","err","map","currentWarrior","warriorListFunc","Component","Command","a","b","a_am","b_am","mod","memory_size","index","player_id","v","memory","new_index","processes","current","p","pre","_call","new_memory","new_processes","new_current","post","Add","source","target","get_true_index","dest","_add","s_a","s_b","d_a","d_b","Dat","splice","Div","_flag","_div","Djn","cond","check","_cond","Jmn","Jmp","destination_index","Jmz","Mod","_mod","Mov","destination","orig","Object","assign","create","getPrototypeOf","Mul","_mul","Seq","c1","c2","acheck","bcheck","_compare","_compare_commands","Slt","Sne","Spl","Sub","ret","_sub","CELL_SIZE","Math","floor","HEIGHT","X_OFFSET","Y_OFFSET","Cell","bg_color","x","y","onMouseEnter","onHover","indexA","indexB","left","top","width","height","value","RenderHoverInfo","easyModeProp","hoverProp","Play","init","onChangePlayer1Code","bind","onChangeHover","onMouseToggle","displayButtons","player1_code","player2_code","p2code","players","make_players","raw_code","player1Code","game_length","final_length","done","current_step","current_player","in_game","warriorList","hoverInfo","hoverIndex","easyMode","easyModeBool","debugMode","debugModeBool","memIndex","instructionValues","values","e","newPlayers","player1code","i","push","start","code_len","code","random","check_memory","address","player","set_code","copy_processes","copy_current","call","new_player","new_players","recur","next_player","end","step","setTimeout","forward","winner","onClick","quickEndThink","quickEnd","nextProps","options","onChange","placeholder","cell","key","NewWarriorComponent","onSubmit","onSave","onDeleteCommand","onChangeName","onChangea","onChangeb","onChangea_am","onChangeb_am","onChangemod","onChangeCmd","onChangeMode","displayInput","onChangeDebugMode","cmd","checked","newCommandList","preventDefault","res","window","location","InputLabel","Select","labelId","MenuItem","TextField","variant","label","required","Switch","color","inputProps","onSubmitName","size","instruction","displayChosenInstructions","displayCommandCard","App","exact","path","component","indexComponent","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b929588.chunk.js","sourcesContent":["import React, {PureComponent} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport \"./corewars/canvas.component.css\"\r\n\r\nexport default class Navbar extends PureComponent {\r\n    render() {\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark\" style={{backgroundColor: '#873AD4'}}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\"><h3>Corewars.Tech</h3></Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className='nav-item'>\r\n                                <a href='../downloads/hype.txt' className='nav-link' download>\r\n                                    <button type=\"button\" className=\"btn btn-outline-light\">\r\n                                        Instructions ⬇️\r\n                                    </button>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to='/play/'>\r\n                                    <button type=\"button\" className=\"btn btn-outline-light\">Leaderboard 📈️ </button>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to='/play/new/'>\r\n                                    <button type=\"button\" className=\"btn btn-outline-light\">Play ➡️</button>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FooterComponent() {\r\n        return(\r\n            <p className='align-bottom text-center text-secondary' >Built with ❤️ by Adi & Eamon.</p>\r\n        )\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst options = ['one', 'two', 'three']\r\n\r\nexport default function IndexComponent(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\" >\r\n                    <div className=\"col-12\">\r\n                        <h1>Welcome to the Corewars.tech webapp alpha!</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <h3>Thanks for checking us out!</h3>\r\n                        <p>We're still in a super early dev stage, and are super open to feedback, comments, and concerns. Thanks for your patience & support!</p>\r\n                        <br />\r\n                        <Link to=\"/play/\">\r\n                            <button type=\"button\" className=\"btn btn-outline-success mb-2 mr-sm-2\">Leaderboard  📈  </button>\r\n                        </Link>\r\n                        <a href='../downloads/hype.txt' download><button type=\"button\" className=\"btn btn-outline-success ml-2 mb-2 mr-sm-2\">Instructions ⬇️</button></a>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst Warrior = (props) => {\r\n    return(\r\n        <tr>\r\n            <td>{props.warrior.name}</td>\r\n            <td>{props.warrior.commandList.length}</td>\r\n            <td>{props.warrior.date.substring(0,10)}</td>\r\n            {/*<Link to={\"/edit/\"+props.exercise._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteExercise(props.exercise._id) }}>delete</a>*/}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default class WarriorsComponent extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            warriors:[]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // what we are doing here: getting pre-existing user information via axios,\r\n        console.log(this.state.warriors)\r\n        axios.get('http://localhost:3000/play/')\r\n            .then((response) => {this.setState({warriors: response.data})\r\n            })\r\n            .catch(err=>console.log(err))\r\n        console.log(this.state.warriors);\r\n    }\r\n\r\n    // add in deleting warriors if desirable\r\n\r\n    warriorListFunc(){\r\n        this.state.warriors.map(currentWarrior => {\r\n            return(<Warrior warrior={currentWarrior}/>)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\" >\r\n                    <div className=\"col-6\">\r\n                        <h3>Leaderboard  📈  </h3>\r\n                        <table className=\"table shadow\">\r\n                            <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Length</th>\r\n                                <th>Date created</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            { this.warriorListFunc() }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n\r\n                        <h3>Build your Warrior!</h3>\r\n                        <Link to=\"/play/new/\">\r\n                            <button type=\"button\" className=\"btn btn-outline-success\">Create a Warrior!</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","//Comand parent class\r\n/*\r\nBelow is the command parent class. It includes the get_true_index, pre, post, and both call methods.\r\nEvery single assembly instruction that we compiled into JS uses this command class as its parent, and\r\nshares these methods, which we use to alter the memory matrix as needed.\r\n*/\r\nclass Command {\r\n    constructor(a, b, a_am, b_am, mod, memory_size){\r\n        while (a < 0) {\r\n            a += memory_size\r\n        }\r\n        this.a = a % memory_size\r\n        while (b < 0) {\r\n            b += memory_size\r\n        }\r\n        this.b = b % memory_size\r\n        this.a_am = a_am\r\n        this.b_am = b_am\r\n        this.mod = mod\r\n        this.memory_size = memory_size\r\n        this.index = 0\r\n        this.player_id = -1\r\n    }\r\n\r\n    init(index, player_id) {\r\n        this.index = index\r\n        this.player_id = player_id\r\n    }\r\n\r\n    get_true_index(v, mod, memory) {\r\n        switch(mod){\r\n            case '#':\r\n                return this.index\r\n            case '$' :\r\n                return (this.index + v) % this.memory_size\r\n            case '@': case '<': case '>':\r\n                var new_index = (this.index + v) % this.memory_size\r\n                return (new_index + memory[new_index].b) % this.memory_size\r\n            case '*': case '{': case '}':\r\n                var new_index = (this.index + v) % this.memory_size\r\n                return (new_index + memory[new_index].a) % this.memory_size\r\n            default:\r\n                return -1\r\n        }\r\n    }\r\n\r\n    pre(v, mod, memory){\r\n        switch(mod) {\r\n            case \"<\":\r\n                if (memory[this.index + v].b === 0)\r\n                    memory[this.index + v].b = this.memory_size\r\n                else\r\n                    memory[this.index + v].b -= 1\r\n                break\r\n            case \"{\":\r\n                if (memory[this.index + v].a === 0)\r\n                    memory[this.index + v].a = this.memory_size\r\n                else\r\n                    memory[this.index + v].a -= 1\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    post(v, mod, memory){\r\n        switch(mod) {\r\n            case \"}\":\r\n                memory[this.index + v].a = (memory[this.index + v].a + 1) % this.memory_size\r\n                break\r\n            case \">\":\r\n                memory[this.index + v].b = (memory[this.index + v].b + 1) % this.memory_size\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    call(memory, processes, current, p){\r\n\r\n        this.pre(this.a, this.a_am, memory)\r\n        this.pre(this.b, this.b_am, memory)\r\n\r\n        const [new_memory, new_processes, new_current] = this._call(memory, processes, current, p)\r\n\r\n        this.post(this.a, this.a_am, memory)\r\n        this.post(this.b, this.b_am, memory)\r\n\r\n        return [new_memory, new_processes, new_current]\r\n    }\r\n\r\n    _call(memory, processes, current, p){}\r\n}\r\n\r\n\r\n//All Instruction Child classes\r\n/*\r\nBelow are the Instruction Child classes. These classes all include a constructor, and a _call method that takes\r\nin the process, process list, and gen. The _call is called in the command class, and is for the assembly-related\r\npurpose of each instruction command. The _call method, depending on the instruction, takes in instructional modifiers\r\nwith a switch statement, and augments the memory matrix accordingly.\r\n*/\r\n\r\n\r\n//add\r\nclass Add extends Command {\r\n    values(){return({name:'Add',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _add(source, target){\r\n        var ret = target + source\r\n        return ret % this.memory_size\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var source = this.get_true_index(this.a, this.a_am, memory)\r\n        var dest = this.get_true_index(this.b, this.b_am, memory)\r\n\r\n        switch(this.mod){\r\n            case \"A\":\r\n                memory[dest].a = this._add(memory[source].a, memory[dest].a)\r\n                break\r\n            case \"B\":\r\n                memory[dest].b = this._add(memory[source].b, memory[dest].b)\r\n                break\r\n            case \"AB\":\r\n                memory[dest].b = this._add(memory[source].a, memory[dest].b)\r\n                break\r\n            case \"BA\":\r\n                memory[dest].a = this._add(memory[source].b, memory[dest].a)\r\n                break\r\n            case \"F\": case \"I\":\r\n                memory[dest].a = this._add(memory[source].a, memory[dest].a)\r\n                memory[dest].b = this._add(memory[source].b, memory[dest].b)\r\n                break\r\n            case \"X\":\r\n                let [s_a, s_b] = [memory[source].a, memory[source].b]\r\n                let [d_a, d_b] = [memory[dest].a, memory[dest].b]\r\n                memory[dest].a = this._add(s_b, d_a)\r\n                memory[dest].b = this._add(s_a, d_b)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        processes[current] = (processes[current] + 1) % this.memory_size\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//dat\r\nclass Dat extends Command {\r\n    values(){return({name:'Blank',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _call(memory, processes, current, p){\r\n        processes.splice(current, 1)\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//div\r\nclass Div extends Command {\r\n    values(){return({name:'Divide',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    constructor(a, b, a_am, b_am, mod, memory, memory_size){\r\n        super(a, b, a_am, b_am, mod, memory, memory_size)\r\n        this._flag = false\r\n    }\r\n\r\n    _div(source, target, processes, current){\r\n        if (source === 0 && !this._flag) {\r\n            processes.splice(current,1)\r\n            this._flag = true\r\n            return target\r\n        }\r\n        return (target / source) >> 0\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var source = this.get_true_index(this.a, this.a_am, memory)\r\n        var dest = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case \"A\":\r\n                memory[dest].a = this._div(memory[source].a, memory[dest].a, processes, current)\r\n                break\r\n            case \"B\":\r\n                memory[dest].b = this._div(memory[source].b, memory[dest].b, processes, current)\r\n                break\r\n            case \"AB\":\r\n                memory[dest].b = this._div(memory[source].a, memory[dest].b, processes, current)\r\n                break\r\n            case \"BA\":\r\n                memory[dest].a = this._div(memory[source].b, memory[dest].a, processes, current)\r\n                break\r\n            case \"F\": case \"I\":\r\n                memory[dest].a = this._div(memory[source].a, memory[dest].a, processes, current)\r\n                memory[dest].b = this._div(memory[source].b, memory[dest].b, processes, current)\r\n                break\r\n            case \"X\":\r\n                let [s_a, s_b] = [memory[source].a, memory[source].b]\r\n                let [d_a, d_b] = [memory[dest].a, memory[dest].b]\r\n                memory[dest].a = this._div(s_b, d_a, processes, current)\r\n                memory[dest].b = this._div(s_a, d_b, processes, current)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        if (!this._flag)\r\n            processes[current] = (processes[current] + 1) % this.memory_size\r\n        this._flag = false\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//djn\r\nclass Djn extends Command {\r\n    values(){return({name:'DecJumpNZ',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _cond(cond, processes, current, dest) {\r\n        if (cond)\r\n            processes[current] = dest\r\n        else\r\n            processes[current] = (processes[current] + 1) % this.memory_size\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var dest = this.get_true_index(this.a, this.a_am, memory)\r\n        var check = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case 'A': case 'BA':\r\n                memory[check].a -= 1\r\n                if (memory[check].a < 0)\r\n                    memory[check].a += this.memory_size\r\n                this._cond((memory[check].a !== 0), processes, current, dest)\r\n                break\r\n            case 'B': case 'AB':\r\n                memory[check].b -= 1\r\n                if (memory[check].b < 0)\r\n                    memory[check].b += this.memory_size\r\n                this._cond((memory[check].b !== 0), processes, current, dest)\r\n                break\r\n            case 'I': case 'X': case 'F':\r\n                memory[check].a -= 1\r\n                memory[check].b -= 1\r\n                if (memory[check].a < 0)\r\n                    memory[check].a += this.memory_size\r\n                if (memory[check].b < 0)\r\n                    memory[check].b += this.memory_size\r\n                this._cond((memory[check].a !== 0 || memory[check].b !== 0), processes, current, dest)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//jmn\r\nclass Jmn extends Command {\r\n    values(){return({name:'JumpNZ',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _cond(cond, processes, current, dest) {\r\n        if (cond)\r\n            processes[current] = dest\r\n        else\r\n            processes[current] = (processes[current] + 1) % this.memory_size\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var dest = this.get_true_index(this.a, this.a_am, memory)\r\n        var check = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case 'A': case 'BA':\r\n                this._cond((memory[check].a !== 0), processes, current, dest)\r\n                break\r\n            case 'B': case 'AB':\r\n                this._cond((memory[check].b !== 0), processes, current, dest)\r\n                break\r\n            case 'I': case 'X': case 'F':\r\n                this._cond((memory[check].a !== 0 || memory[check].b !== 0), processes, current, dest)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//jmp\r\nclass Jmp extends Command {\r\n    values(){return({name:'Jump',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _call(memory, processes, current, p){\r\n        var destination_index = this.get_true_index(this.a, this.a_am, memory)\r\n        processes[current] = destination_index\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//jmz\r\nclass Jmz extends Command {\r\n    values(){return({name:'JumpZ',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _cond(cond, processes, current, dest) {\r\n        if (cond)\r\n            processes[current] = dest\r\n        else\r\n            processes[current] = (processes[current] + 1) % this.memory_size\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var dest = this.get_true_index(this.a, this.a_am, memory)\r\n        var check = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case 'A': case 'BA':\r\n                this._cond((memory[check].a === 0), processes, current, dest)\r\n                break\r\n            case 'B': case 'AB':\r\n                this._cond((memory[check].b === 0), processes, current, dest)\r\n                break\r\n            case 'I': case 'X': case 'F':\r\n                this._cond((memory[check].a === 0 && memory[check].b === 0), processes, current, dest)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//mod\r\nclass Mod extends Command {\r\n    values(){return({name:'Modulus',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _mod(source, target, processes, current){\r\n        if (source === 0 && !this._flag) {\r\n            processes.splice(current,1)\r\n            this._flag = true\r\n            return target\r\n        }\r\n        return target % source\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var source = this.get_true_index(this.a, this.a_am, memory)\r\n        var dest = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case \"A\":\r\n                memory[dest].a = this._mod(memory[source].a, memory[dest].a, processes, current)\r\n                break\r\n            case \"B\":\r\n                memory[dest].b = this._mod(memory[source].b, memory[dest].b, processes, current)\r\n                break\r\n            case \"AB\":\r\n                memory[dest].b = this._mod(memory[source].a, memory[dest].b, processes, current)\r\n                break\r\n            case \"BA\":\r\n                memory[dest].a = this._mod(memory[source].b, memory[dest].a, processes, current)\r\n                break\r\n            case \"F\": case \"I\":\r\n                memory[dest].a = this._mod(memory[source].a, memory[dest].a, processes, current)\r\n                memory[dest].b = this._mod(memory[source].b, memory[dest].b, processes, current)\r\n                break\r\n            case \"X\":\r\n                let [s_a, s_b] = [memory[source].a, memory[source].b]\r\n                let [d_a, d_b] = [memory[dest].a, memory[dest].b]\r\n                memory[dest].a = this._mod(s_b, d_a, processes, current)\r\n                memory[dest].b = this._mod(s_a, d_b, processes, current)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        if (!this._flag) {\r\n            processes[current] = (processes[current] + 1) % this.memory_size\r\n        }\r\n        this._flag = false\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//mov\r\nclass Mov extends Command {\r\n    values(){return({name:'Copy',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _call(memory, processes, current, p){\r\n        var source = this.get_true_index(this.a, this.a_am, memory)\r\n        var destination = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case 'A':\r\n                //moves the A-field of the source into the A-field of the destination\r\n                memory[destination].a = memory[source].a\r\n                break\r\n            case 'B':\r\n                memory[destination].b = memory[source].b\r\n                break\r\n            case 'AB':\r\n                memory[destination].b = memory[source].a\r\n                break\r\n            case 'BA':\r\n                memory[destination].a = memory[source].b\r\n                break\r\n            case 'I':\r\n                var orig = memory[source]\r\n                memory[destination] = Object.assign(Object.create(Object.getPrototypeOf(orig)), orig)\r\n                memory[destination].index = destination\r\n                memory[destination].player_id = p\r\n                break\r\n            case 'F':\r\n                memory[destination].a = memory[source].a\r\n                memory[destination].b = memory[source].b\r\n                break\r\n            case 'X':\r\n                let [s_a, s_b] = [memory[source].a, memory[source].b]\r\n                memory[destination].a = s_b\r\n                memory[destination].b = s_a\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        // incrementing by one, after the move\r\n        processes[current] = (processes[current] + 1) % this.memory_size\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//mul\r\nclass Mul extends Command {\r\n    values(){return({name:'Multiply',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _mul(source, target){\r\n        var ret = target * source\r\n        return ret % this.memory_size\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var source = this.get_true_index(this.a, this.a_am, memory)\r\n        var dest = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case \"A\":\r\n                memory[dest].a = this._mul(memory[source].a, memory[dest].a)\r\n                break\r\n            case \"B\":\r\n                memory[dest].b = this._mul(memory[source].b, memory[dest].b)\r\n                break\r\n            case \"AB\":\r\n                memory[dest].b = this._mul(memory[source].a, memory[dest].b)\r\n                break\r\n            case \"BA\":\r\n                memory[dest].a = this._mul(memory[source].b, memory[dest].a)\r\n                break\r\n            case \"F\": case \"I\":\r\n                memory[dest].a = this._mul(memory[source].a, memory[dest].a)\r\n                memory[dest].b = this._mul(memory[source].b, memory[dest].b)\r\n                break\r\n            case \"X\":\r\n                let [s_a, s_b] = [memory[source].a, memory[source].b]\r\n                let [d_a, d_b] = [memory[dest].a, memory[dest].b]\r\n                memory[dest].a = this._mul(s_b, d_a)\r\n                memory[dest].b = this._mul(s_a, d_b)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        processes[current] = (processes[current] + 1) % this.memory_size\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//seq\r\nclass Seq extends Command {\r\n    values(){return({name:'SkipE',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _compare_commands(c1, c2) {\r\n        if (Object.getPrototypeOf(c1) !== Object.getPrototypeOf(c2))\r\n            return false\r\n        if (c1.a !== c2.a || c1.b !== c2.b  || c1.mod !== c2.mod)\r\n            return false\r\n        if (c1.a_am !== c2.a_am || c1.b_am !== c2.b_am)\r\n            return false\r\n        return true\r\n    }\r\n\r\n    _compare(cond, processes, current) {\r\n        if (cond)\r\n            processes[current] = (processes[current] + 2) % this.memory_size\r\n        else\r\n            processes[current] = (processes[current] + 1) % this.memory_size\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var acheck = this.get_true_index(this.a, this.a_am, memory)\r\n        var bcheck = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case 'A':\r\n                this._compare((memory[acheck].a === memory[bcheck].a), processes, current)\r\n                break\r\n            case 'B':\r\n                this._compare((memory[acheck].b === memory[bcheck].b), processes, current)\r\n                break\r\n            case 'AB':\r\n                this._compare((memory[acheck].a === memory[bcheck].b), processes, current)\r\n                break\r\n            case 'BA':\r\n                this._compare((memory[acheck].b === memory[bcheck].a), processes, current)\r\n                break\r\n            case 'F':\r\n                var cond = (memory[acheck].a === memory[bcheck].a) && (memory[acheck].b === memory[bcheck].b)\r\n                this._compare(cond, processes, current)\r\n                break\r\n            case 'I':\r\n                var cond = this._compare_commands(memory[acheck], memory[bcheck])\r\n                this._compare(cond, processes, current)\r\n                break\r\n            case 'X':\r\n                var cond = (memory[acheck].a === memory[bcheck].b) && (memory[acheck].b === memory[bcheck].a)\r\n                this._compare(cond, processes, current)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//slt\r\nclass Slt extends Command {\r\n    values(){return({name:'SkipL',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _compare(cond, processes, current) {\r\n        if (cond)\r\n            processes[current] = (processes[current] + 2) % this.memory_size\r\n        else\r\n            processes[current] = (processes[current] + 1) % this.memory_size\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var acheck = this.get_true_index(this.a, this.a_am, memory)\r\n        var bcheck = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case 'A':\r\n                this._compare(memory[acheck].a < memory[bcheck].a, processes, current)\r\n                break\r\n            case 'B':\r\n                this._compare(memory[acheck].b < memory[bcheck].b, processes, current)\r\n                break\r\n            case 'AB':\r\n                this._compare(memory[acheck].a < memory[bcheck].b, processes, current)\r\n                break\r\n            case 'BA':\r\n                this._compare(memory[acheck].b < memory[bcheck].a, processes, current)\r\n                break\r\n            case 'I': case 'F':\r\n                var cond = (memory[acheck].a < memory[bcheck].a) && (memory[acheck].b < memory[bcheck].b)\r\n                this._compare(cond, processes, current)\r\n                break\r\n            case 'X':\r\n                var cond = (memory[acheck].a < memory[bcheck].b) && (memory[acheck].b < memory[bcheck].a)\r\n                this._compare(cond, processes, current)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//sne\r\nclass Sne extends Command {\r\n    values(){return({name:'SkipNE',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _compare_commands(c1, c2) {\r\n        if (Object.getPrototypeOf(c1) !== Object.getPrototypeOf(c2))\r\n            return true\r\n        if (c1.a !== c2.a || c1.b !== c2.b  || c1.mod !== c2.mod)\r\n            return true\r\n        if (c1.a_am !== c2.a_am || c1.b_am !== c2.b_am)\r\n            return true\r\n        return false\r\n    }\r\n\r\n    _compare(cond, processes, current) {\r\n        if (cond)\r\n            processes[current] = (processes[current] + 2) % this.memory_size\r\n        else\r\n            processes[current] = (processes[current] + 1) % this.memory_size\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var acheck = this.get_true_index(this.a, this.a_am, memory)\r\n        var bcheck = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case 'A':\r\n                this._compare(memory[acheck].a !== memory[bcheck].a, processes, current)\r\n                break\r\n            case 'B':\r\n                this._compare(memory[acheck].b !== memory[bcheck].b, processes, current)\r\n                break\r\n            case 'AB':\r\n                this._compare(memory[acheck].a !== memory[bcheck].b, processes, current)\r\n                break\r\n            case 'BA':\r\n                this._compare(memory[acheck].b !== memory[bcheck].b, processes, current)\r\n                break\r\n            case 'F':\r\n                var cond = (memory[acheck].a !== memory[bcheck].a) || (memory[acheck].b !== memory[bcheck].b)\r\n                this._compare(cond, processes, current)\r\n                break\r\n            case 'I':\r\n                var cond = this._compare_commands(memory[acheck], memory[bcheck])\r\n                this._compare(cond, processes, current)\r\n                break\r\n            case 'X':\r\n                var cond = (memory[acheck].a !== memory[bcheck].b) || (memory[acheck].b !== memory[bcheck].a)\r\n                this._compare(cond, processes, current)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//spl\r\nclass Spl extends Command {\r\n    values(){return({name:'Split',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _call(memory, processes, current, p){\r\n        var destination_index = this.get_true_index(this.a, this.a_am, memory)\r\n\r\n        processes.splice(current + 1, 0, destination_index)\r\n\r\n        processes[current] = (processes[current] + 1) % this.memory_size\r\n        current += 2\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\n//sub\r\nclass Sub extends Command {\r\n    values(){return({name:'Subtract',a:this.a, b:this.b, a_am:this.a_am, b_am:this.b_am, mod:this.mod})}\r\n\r\n    _sub(source, target){\r\n        var ret = target - source\r\n        if (ret < 0)\r\n            ret += this.memory_size\r\n        return ret\r\n    }\r\n\r\n    _call(memory, processes, current, p){\r\n        var source = this.get_true_index(this.a, this.a_am, memory)\r\n        var dest = this.get_true_index(this.b, this.b_am, memory)\r\n        switch(this.mod){\r\n            case \"A\":\r\n                memory[dest].a = this._sub(memory[source].a, memory[dest].a)\r\n                break\r\n            case \"B\":\r\n                memory[dest].b = this._sub(memory[source].b, memory[dest].b)\r\n                break\r\n            case \"AB\":\r\n                memory[dest].b = this._sub(memory[source].a, memory[dest].b)\r\n                break\r\n            case \"BA\":\r\n                memory[dest].a = this._sub(memory[source].b, memory[dest].a)\r\n                break\r\n            case \"F\": case \"I\":\r\n                memory[dest].a = this._sub(memory[source].a, memory[dest].a)\r\n                memory[dest].b = this._sub(memory[source].b, memory[dest].b)\r\n                break\r\n            case \"X\":\r\n                let [s_a, s_b] = [memory[source].a, memory[source].b]\r\n                let [d_a, d_b] = [memory[dest].a, memory[dest].b]\r\n                memory[dest].a = this._sub(s_b, d_a)\r\n                memory[dest].b = this._sub(s_a, d_b)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n        processes[current] = (processes[current] + 1) % this.memory_size\r\n        current += 1\r\n        return [memory, processes, current]\r\n    }\r\n}\r\n\r\nexport {\r\n    Command,\r\n    Add,\r\n    Dat,\r\n    Div,\r\n    Djn,\r\n    Jmn,\r\n    Jmp,\r\n    Jmz,\r\n    Mod,\r\n    Mov,\r\n    Mul,\r\n    Seq,\r\n    Slt,\r\n    Sne,\r\n    Spl,\r\n    Sub\r\n}","import React, {PureComponent} from \"react\"\r\n// import { Link } from 'react-router-dom'\r\n// import { Command, Add, Dat, Div, Djn, Jmn,\r\n//     Jmp, Jmz, Mod, Mov, Mul, Seq,\r\n//     Slt, Sne, Spl, Sub } from  './instructions'\r\nimport \"./canvas.component.css\"\r\n\r\n\r\nconst WIDTH = 800\r\nconst HEIGHT = 600\r\nconst ROWS = 25\r\nconst COLUMNS = 25\r\nconst CELL_SIZE = (WIDTH / COLUMNS > HEIGHT / ROWS ?\r\n    Math.floor(HEIGHT / ROWS) : Math.floor(WIDTH / COLUMNS))\r\nconst X_OFFSET = Math.floor((WIDTH - CELL_SIZE * COLUMNS) / 2)\r\nconst Y_OFFSET = Math.floor((HEIGHT - CELL_SIZE * ROWS) / 2)\r\n\r\n\r\n\r\nexport default class Cell extends PureComponent {\r\n    render() {\r\n        console.log(\"Rendered\")\r\n        const { index, player_id, } = this.props\r\n        const x = Math.floor(index / ROWS)\r\n        const y = index % ROWS\r\n        let bg_color\r\n\r\n\r\n        switch (player_id) {\r\n            case 0:\r\n                bg_color = \"red\"\r\n                break\r\n            case 1:\r\n                bg_color = \"blue\"\r\n                break\r\n            default:\r\n                bg_color = \"#eeeeee\"\r\n                break\r\n        }\r\n        const onMouseHover = ()=>{\r\n            this.props.onHover(index)\r\n            console.log('indexA: ' + this.props.indexA)\r\n            console.log('indexB: ' + this.props.indexB)\r\n            console.log('index: ' + index)\r\n        }\r\n\r\n        // const onMouseUnHover = () => {\r\n        //     hovered=false\r\n        // }\r\n\r\n\r\n\r\n        // if (index == this.props.indexA){\r\n        //     return (\r\n        //         <div className=\"CellA padding-0\"\r\n        //              onMouseEnter = {() => onMouseHover()}\r\n        //             // onMouseLeave={() => onMouseUnHover()}\r\n        //              style={{\r\n        //                  left: `${CELL_SIZE * x + X_OFFSET}px`,\r\n        //                  top: `${CELL_SIZE * y + Y_OFFSET}px`,\r\n        //                  width: `${CELL_SIZE}px`,\r\n        //                  height: `${CELL_SIZE}px`,\r\n        //                  backgroundColor: `${bg_color}`,\r\n        //              }}\r\n        //         />\r\n        //     )\r\n        // }\r\n        // else if (index == this.props.indexB){\r\n        //     return(\r\n        //         <div className=\"CellB padding-0\"\r\n        //              onMouseEnter = {() => onMouseHover()}\r\n        //             // onMouseLeave={() => onMouseUnHover()}\r\n        //              style={{\r\n        //                  left: `${CELL_SIZE * x + X_OFFSET}px`,\r\n        //                  top: `${CELL_SIZE * y + Y_OFFSET}px`,\r\n        //                  width: `${CELL_SIZE}px`,\r\n        //                  height: `${CELL_SIZE}px`,\r\n        //                  backgroundColor: `${bg_color}`,\r\n        //              }}\r\n        //         />\r\n        //     )\r\n        //\r\n        // }\r\n        // else {\r\n            return (\r\n                <div className=\"Cell padding-0\"\r\n                     onMouseEnter = {() => onMouseHover()}\r\n                    // onMouseLeave={() => onMouseUnHover()}\r\n                     style={{\r\n                         left: `${CELL_SIZE * x + X_OFFSET}px`,\r\n                         top: `${CELL_SIZE * y + Y_OFFSET}px`,\r\n                         width: `${CELL_SIZE}px`,\r\n                         height: `${CELL_SIZE}px`,\r\n                         backgroundColor: `${bg_color}`,\r\n                     }}\r\n                />\r\n            )\r\n        // }\r\n\r\n    }\r\n}\r\n","//React play page\r\n\r\nimport React, {Component} from \"react\"\r\n// import { Link } from 'react-router-dom'\r\nimport Cell from  './corewars/canvas.component'\r\nimport { Command, Add, Dat, Div, Djn, Jmn,\r\n    Jmp, Jmz, Mod, Mov, Mul, Seq,\r\n    Slt, Sne, Spl, Sub } from  './corewars/instructions'\r\nimport 'bootstrap/dist/js/bootstrap.bundle';\r\nimport Dropdown from 'react-dropdown'\r\nimport 'react-dropdown/style.css'\r\n\r\n\r\nconst HEIGHT = 600\r\nconst WIDTH = 800\r\nconst INTERVAL = 0\r\n\r\nconst Warrior = (props) => {\r\n    return(\r\n        <div>\r\n            {/*<a className=\"dropdown-item\" href=\"#\" value={props.warrior} >{props.warrior.name} | {props.warrior.commandList.length}</a>*/}\r\n            <button className=\"dropdown-item\" type=\"button\" value={props.warrior}> name: {props.warrior.name} | length: {props.warrior.commandList.length}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst RenderHoverInfo = (props) => {\r\n    if (props.easyModeProp){\r\n        return(\r\n            <div>\r\n                <h5>\r\n                    Cell Info👉{props.hoverProp.name}  (  {props.hoverProp.a}  ,  {props.hoverProp.b}  )\r\n                </h5>\r\n                {/*<p className=\"card-text\"> <b>Command: {props.hoverProp.name}</b> a_am: <b>{props.hoverProp.a_am}</b> |*/}\r\n                {/*a: <b>{props.hoverProp.a}</b> | b_am: <b>{props.hoverProp.b_am}</b> |*/}\r\n                {/*b: <b>{props.hoverProp.b}</b> | mod: <b>{props.hoverProp.mod}</b></p>*/}\r\n                {/*<p>index: {props.hoverProp}</p>*/}\r\n            </div>\r\n\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <h5>\r\n                    Cell Info👉{props.hoverProp.name}.{props.hoverProp.mod}    (  {props.hoverProp.a_am}  {props.hoverProp.a}  ,  {props.hoverProp.b_am}  {props.hoverProp.b}  )\r\n                </h5>\r\n                {/*<p className=\"card-text\"> <b>Command: {props.hoverProp.name}</b> a_am: <b>{props.hoverProp.a_am}</b> |*/}\r\n                {/*a: <b>{props.hoverProp.a}</b> | b_am: <b>{props.hoverProp.b_am}</b> |*/}\r\n                {/*b: <b>{props.hoverProp.b}</b> | mod: <b>{props.hoverProp.mod}</b></p>*/}\r\n                {/*<p>index: {props.hoverProp}</p>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default class Play extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const memory_size = 625\r\n        var memory = this.init(memory_size)\r\n\r\n\r\n        this.onChangePlayer1Code = this.onChangePlayer1Code.bind(this)\r\n        this.onChangeHover = this.onChangeHover.bind(this)\r\n        this.onMouseToggle = this.onMouseToggle.bind(this)\r\n        this.displayButtons = this.displayButtons.bind(this)\r\n\r\n        var player1_code = [new Mov(0, 1, \"$\", \"$\", \"I\", memory_size)] // array of commands\r\n        // var player1_code = props.p1code;\r\n\r\n        // const player2_code = [new Add(4, 3, '#','$', 'AB', memory_size),\r\n        //     new Mov(2, 2, \"$\", \"@\", \"I\", memory_size),\r\n        //     new Jmp(-2, 0,'$', '$', '', memory_size),\r\n        //     new Dat(0, 0, '$', '$', '', memory_size)]\r\n\r\n        var player2_code = props.p2code\r\n\r\n        var players = this.make_players(memory, [player1_code, player2_code])\r\n\r\n        this.state = {\r\n            raw_code: [player1_code, player2_code],\r\n            player1Code: player1_code,\r\n            memory_size: memory_size,\r\n            memory: memory,\r\n            players: players,\r\n            game_length: 2000,\r\n            final_length: 0,\r\n            done: null,\r\n            current_step: 1,\r\n            current_player: 0,\r\n            in_game: false,\r\n            warriors: props.warriorList,\r\n            hoverInfo: {},\r\n            hoverIndex: null,\r\n            easyMode: props.easyModeBool,\r\n            debugMode: props.debugModeBool\r\n        }\r\n    }\r\n\r\n    onChangeHover(memIndex){\r\n        const instructionValues = this.state.memory[memIndex].values()\r\n\r\n        this.setState({\r\n            hoverInfo: instructionValues,\r\n            hoverIndex: memIndex\r\n        })\r\n    }\r\n\r\n    onMouseToggle(){\r\n        console.log('Mouse Toggled')\r\n    }\r\n\r\n    onChangePlayer1Code(e){\r\n        let newPlayers = this.state.raw_code.map(x => (Object.assign(Object.create( Object.getPrototypeOf(x)), x)));\r\n        newPlayers[0] = e.target.value;\r\n\r\n        this.setState({\r\n            raw_code:newPlayers,\r\n            players: this.make_players(this.state.memory, newPlayers),\r\n            player1code: e.target.value\r\n        })\r\n    }\r\n\r\n    init(memory_size) {\r\n        var memory = []\r\n        for (let i = 0; i < memory_size; i++) {\r\n            memory.push(new Dat(0, 0, \"$\", \"$\", \"\", memory_size))\r\n            memory[memory.length - 1].init(i, -1)\r\n        }\r\n        return memory\r\n    }\r\n\r\n    check_memory(memory, start, code_len) {\r\n        for (var i = 0; i < code_len; i++) {\r\n            if (memory[(start + i) % memory.length].player_id !== -1)\r\n                return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    set_code(memory, code, player_id) {\r\n        // Find a starting location that doesn't overlap with player code\r\n        var start = Math.floor(Math.random() * (memory.length - 1))\r\n        while (!this.check_memory(memory, start, code.length)) {\r\n            start = Math.floor(Math.random() * (memory.length - 1))\r\n        }\r\n\r\n        for (var i = 0; i < code.length; i++) {\r\n            var address = (start + i) % memory.length\r\n            memory[address] = code[i]\r\n            memory[address].init(address, player_id)\r\n        }\r\n        return start\r\n    }\r\n\r\n    make_players(memory, code) {\r\n        let players = []\r\n        for (var i = 0; i < code.length; i++) {\r\n            let start = this.set_code(memory, code[i], i)\r\n            // Start new process where code was written\r\n            let player = {\r\n                \"processes\": [start],\r\n                \"current\": 0\r\n            }\r\n            players.push(player)\r\n        }\r\n        return players\r\n    }\r\n\r\n    step(current_player, players) {\r\n        const {memory} = this.state\r\n        const {processes, current} = players[current_player]\r\n        const address = processes[current]\r\n\r\n        // let copy_memory = memory.map(x =>\r\n        //     (Object.assign( Object.create( Object.getPrototypeOf(x)), x)))\r\n\r\n\r\n        let copy_processes = [...processes]\r\n        var copy_current = current\r\n        let [new_memory, new_processes, new_current] = memory[address].call(memory,\r\n            copy_processes, copy_current, current_player)\r\n        new_current = new_current % new_processes.length\r\n\r\n        const new_player = {\r\n            \"processes\": new_processes,\r\n            \"current\": new_current\r\n        }\r\n        let new_players = players.map(x => ({...x}))\r\n        new_players[current_player] = new_player\r\n\r\n        return [new_memory, new_players]\r\n    }\r\n\r\n    forward(recur=true) {\r\n        const {current_step, current_player, players, game_length, in_game} = this.state\r\n        const next_player = (current_player === 0 ? 1 : 0)\r\n        console.log(players)\r\n\r\n        if (current_step === game_length)\r\n            this.end(-1, game_length)\r\n        else if (players[current_player][\"processes\"].length === 0)\r\n            this.end(next_player, current_step)\r\n        else if (in_game) {\r\n            const [new_memory, new_players] = this.step(current_player, players)\r\n            this.setState({\r\n                current_step: current_step + 1,\r\n                current_player: next_player,\r\n                players: new_players,\r\n                memory: new_memory,\r\n            })\r\n            if (recur)\r\n                setTimeout(() => {this.forward()}, INTERVAL)\r\n        }\r\n    }\r\n\r\n    start() {\r\n        var players = this.make_players(this.state.memory, this.state.raw_code)\r\n        this.setState({\r\n            players:players,\r\n        })\r\n        if (!this.state.in_game) {\r\n            this.setState({in_game: true}, () => {this.forward()})}\r\n    }\r\n\r\n    startOne(){\r\n        var players = this.make_players(this.state.memory, this.state.raw_code)\r\n        this.setState({\r\n            players:players,\r\n        })\r\n        this.forward()\r\n        // if (!this.state.in_game) {\r\n        //     this.setState({in_game: true}, () => {this.forward()})}\r\n    }\r\n\r\n    end(winner, final_length) {\r\n        this.setState({done: winner, final_length: final_length, in_game: false})\r\n    }\r\n\r\n    quickEnd(){\r\n        this.setState({\r\n            done: null,\r\n            final_length: 0,\r\n            in_game: false,\r\n            memory: this.init(this.state.memory_size)\r\n\r\n        })\r\n    }\r\n\r\n    quickEndThink(){\r\n        this.setState({\r\n            done: null,\r\n            final_length:0,\r\n            in_game:false,\r\n        })\r\n    }\r\n\r\n    warriorListFunc(){\r\n        this.state.warriors.map(currentWarrior => {\r\n            return(<Warrior warrior={currentWarrior}/>)\r\n        })\r\n    }\r\n\r\n    displayButtons(){\r\n        if (this.state.debugMode){\r\n            return(\r\n                <div>\r\n                    {/*<button className=\"btn btn-outline-warning mb-2 mr-sm-2\" onClick={this.startOne.bind(this)}>🏃 1️</button>*/}\r\n                    <button className=\"btn btn-outline-success mb-2 mr-sm-2\" onClick={this.start.bind(this)}>🏃‍</button>\r\n                    <button className=\"btn btn-outline-danger ml-2 mb-2 mr-sm-2\" onClick={this.quickEndThink.bind(this)}>🤔 ❌</button>\r\n                    <button className=\"btn btn-outline-danger ml-2 mb-2 mr-sm-2\" onClick={this.quickEnd.bind(this)}>❌</button>\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n                    <button className=\"btn btn-outline-success mb-2 mr-sm-2\" onClick={this.start.bind(this)}>🏃‍</button>\r\n                    <button className=\"btn btn-outline-danger ml-2 mb-2 mr-sm-2\" onClick={this.quickEndThink.bind(this)}>🤔 ❌</button>\r\n                    <button className=\"btn btn-outline-danger ml-2 mb-2 mr-sm-2\" onClick={this.quickEnd.bind(this)}>❌</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const memory_size = 625\r\n        var memory = this.init(memory_size)\r\n        this.onChangePlayer1Code = this.onChangePlayer1Code.bind(this)\r\n        this.onChangeHover = this.onChangeHover.bind(this)\r\n        this.onMouseToggle = this.onMouseToggle.bind(this)\r\n\r\n\r\n        var player1_code = [new Mov(0, 1, \"$\", \"$\", \"I\", memory_size)] // array of commands\r\n        var player2_code = nextProps.p2code\r\n        console.log(player1_code)\r\n        console.log(player2_code)\r\n\r\n        var players = this.make_players(memory, [player1_code, player2_code])\r\n        this.setState({\r\n            raw_code: [player1_code, player2_code],\r\n            player1Code: player1_code,\r\n            memory_size: memory_size,\r\n            memory: memory,\r\n            players: players,\r\n            game_length: 2000,\r\n            final_length: 0,\r\n            done: null,\r\n            current_step: 1,\r\n            current_player: 0,\r\n            in_game: false,\r\n            warriors: nextProps.warriorList,\r\n            hoverInfo: {},\r\n            hoverIndex: null,\r\n            easyMode: nextProps.easyModeBool,\r\n            debugMode: nextProps.debugModeBool\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className='col-6 mb-2'>\r\n                    <Dropdown options={this.state.warriors} onChange={this.onChangePlayer1Code}  placeholder='Select Opponent ⚔️' />\r\n                </div>\r\n                <div className='row mt-2'>\r\n                    {this.displayButtons()}\r\n                    <div className=\"card shadow rounded ml-2\">\r\n                        <div className=\"card-body\">\r\n                            <RenderHoverInfo hoverProp={this.state.hoverInfo} easyModeProp={this.state.easyMode}/>\r\n                        </div>\r\n                    </div>\r\n                    {/*<div className=\"btn-group dropright\">*/}\r\n                    {/*    <button className=\"btn btn-secondary dropdown-toggle ml-2 mb-2 mr-sm-2\" type=\"button\" id=\"dropdownMenuButton\"*/}\r\n                    {/*            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" onChange={this.onChangePlayer1Code}>*/}\r\n                    {/*        Select Opponent ⚔️*/}\r\n                    {/*    </button>*/}\r\n                    {/*    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">*/}\r\n                    {/*        {this.warriorListFunc()}*/}\r\n                    {/*    </div>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <br />\r\n                <div className='col-12 padding-0'>\r\n                    <div className=\"Board\" style={{height: HEIGHT, width: WIDTH}}>\r\n                        {this.state.memory.map(cell => (\r\n                            <Cell\r\n                                height = {HEIGHT}\r\n                                width = {WIDTH}\r\n                                player_id = {cell.player_id}\r\n                                index = {cell.index}\r\n                                key = {cell.index}\r\n                                indexA = {(this.state.hoverIndex + this.state.hoverInfo.a)%this.state.memory_size}\r\n                                indexB = {(this.state.hoverIndex + this.state.hoverInfo.a)%this.state.memory_size}\r\n                                onHover = {this.onChangeHover}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { Command, Add, Dat, Div, Djn, Jmn,\r\n    Jmp, Jmz, Mod, Mov, Mul, Seq,\r\n    Slt, Sne, Spl, Sub } from \"./corewars/instructions\";\r\nimport PlayComponent from './play.component'\r\nimport './corewars/canvas.component.css'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst memory_size = 625;\r\n\r\n\r\nconst displayChosenInstructions = (commandList, onDeleteCommand, easyMode) => {\r\n    // var instructionList = []\r\n    // for (var inc = 0; inc < commandList.length; inc ++) {\r\n    //     // instructionList.push(renderInstruction(commandList[inc]))\r\n    //     instructionList.push(commandList[inc]);\r\n    // }\r\n\r\n    if (commandList.length === 0){}\r\n    else {\r\n        if (easyMode){\r\n            return (\r\n                <div>\r\n                    {commandList.map((instruction, index) =>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4>\r\n                                    {instruction.values().name}  (  {instruction.values().a}  ,  {instruction.values().b}  )\r\n                                    <button type=\"button\" onClick={() => {onDeleteCommand(index)}} className=\"btn btn-outline-danger float-right\">🗑️</button>\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    {commandList.map((instruction, index) =>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4>\r\n                                    {instruction.values().name}.{instruction.values().mod}    (  {instruction.values().a_am}  {instruction.values().a}  ,  {instruction.values().b_am}  {instruction.values().b}  )\r\n                                    <button type=\"button\" onClick={() => {onDeleteCommand(index)}} className=\"btn btn-outline-danger float-right\">🗑️</button>\r\n                                </h4>\r\n                                {/*<p className=\"card-text\">a_am: <b></b> |*/}\r\n                                {/*    a: <b></b> | b_am: <b>{instruction.values().b_am}</b> |*/}\r\n                                {/*    b: <b>{instruction.values().b}</b> | mod: <b></b></p>*/}\r\n                                {/*add in buttons to delete, new delete function, how do you execute commands? */}\r\n                                {/*add in / edit?? */}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst displayCommandCard = (debugMode, easyMode) =>{\r\n    if (debugMode || easyMode){\r\n        return(\r\n            <div className='card shadow rounded'>\r\n                <div className='card-body'>\r\n                    <h5 className='card-title ml-2 mt-2'>Command Options</h5>\r\n                    <div className='card-text'>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Copy</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Blank</button>\r\n                    </div>\r\n                    <div className='card-text'>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Add</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Subtract</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Multiply</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Divide</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Modulus</button>\r\n                    </div>\r\n                    <div className='card-text'>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Jump</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>JumpZ</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>JumpNZ</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>DecJumpNZ</button>\r\n                    </div>\r\n                    <div className='card-text'>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Split</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>SkipE</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>SkipNE</button>\r\n                        <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>SkipL</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class NewWarriorComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onSave = this.onSave.bind(this)\r\n        this.onDeleteCommand = this.onDeleteCommand.bind(this)\r\n\r\n        this.onChangeName = this.onChangeName.bind(this)\r\n        this.onChangea = this.onChangea.bind(this)\r\n        this.onChangeb = this.onChangeb.bind(this)\r\n        this.onChangea_am = this.onChangea_am.bind(this)\r\n        this.onChangeb_am = this.onChangeb_am.bind(this)\r\n        this.onChangemod = this.onChangemod.bind(this)\r\n        this.onChangeCmd = this.onChangeCmd.bind(this)\r\n        this.onChangeMode = this.onChangeMode.bind(this)\r\n        this.displayInput = this.displayInput.bind(this)\r\n        this.onChangeDebugMode = this.onChangeDebugMode.bind(this)\r\n\r\n\r\n\r\n\r\n\r\n        // add more this binds\r\n\r\n        this.state = {\r\n            name: '',\r\n            commandList: [],\r\n            warriors:[],\r\n            //command specific\r\n            cmd:'',\r\n            a:'',\r\n            b:'',\r\n            a_am:'',\r\n            b_am:'',\r\n            mod:'',\r\n            easyMode: true,\r\n            debugMode: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // grabbing info for testing dropdown\r\n        axios.get('http://localhost:3000/play/new/')\r\n            .then( (response) => {\r\n                if (response.data.length >0){\r\n                    this.setState({\r\n                        warriors: response.data\r\n                    })\r\n                }\r\n            })\r\n            .catch(err=>console.log(err))\r\n    }\r\n\r\n    onChangeName(e){\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangea(e){\r\n        this.setState({\r\n            a:e.target.value\r\n        })\r\n    }\r\n    onChangeb(e){\r\n        this.setState({\r\n            b:e.target.value\r\n        })\r\n    }\r\n    onChangea_am(e){\r\n        this.setState({\r\n            a_am:e.target.value\r\n        })\r\n    }\r\n    onChangeb_am(e){\r\n        this.setState({\r\n            b_am:e.target.value\r\n        })\r\n    }\r\n    onChangemod(e){\r\n        this.setState({\r\n            mod:e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeCmd(e){\r\n        this.setState({\r\n            cmd:e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeMode(e){\r\n        this.setState({\r\n            easyMode: e.target.checked\r\n        })\r\n    }\r\n\r\n    onChangeDebugMode(e){\r\n        this.setState({\r\n            debugMode: e.target.checked\r\n        })\r\n    }\r\n\r\n\r\n    onDeleteCommand(index){\r\n        // this command needs to delete a single command from the commandList. However, how do we pass a parameter\r\n        // (with e, i guess) to specify which item on the list will be delted?\r\n        // currently it will just delete the last one.\r\n        let newCommandList = this.state.commandList.map(x => (Object.assign(Object.create( Object.getPrototypeOf(x)), x)))\r\n        // console.log(\"Old\")\r\n        // console.log(newCommandList)\r\n        // console.log(\"Index: \" + index)\r\n        // test:\r\n        // newCommandList = newCommandList.pop()\r\n        newCommandList.splice(index, 1)\r\n\r\n        // const len = newCommandList.length\r\n        // newCommandList = newCommandList.splice(len-1, 1)\r\n        // console.log(\"New\")\r\n        // console.log(newCommandList)\r\n        this.setState({\r\n            commandList: newCommandList,\r\n        })\r\n    }\r\n    onSave(e){\r\n        e.preventDefault()\r\n        const Warrior = {\r\n            name: this.state.name,\r\n            commandList: this.state.commandList,\r\n        }\r\n        console.log(Warrior)\r\n        axios.post('http://localhost:3000/play/new/', Warrior)\r\n            .then(res=> console.log(res.data))\r\n        window.location = '/play/'\r\n    }\r\n\r\n    //dummy function\r\n    onSubmitName(e){\r\n        e.preventDefault()\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        var newCommandList = this.state.commandList.map(x => (Object.assign(Object.create( Object.getPrototypeOf(x)), x)))\r\n\r\n        if (this.state.easyMode){\r\n            // easy interpreting\r\n            switch (this.state.cmd){\r\n                case 'Copy': newCommandList.push(new Mov(this.state.a, this.state.b, '$', '$', 'I', memory_size)); break;\r\n                case 'Add': newCommandList.push(new Add(this.state.a, this.state.b, '$', '$', 'AB', memory_size)); break;\r\n                case 'Blank': newCommandList.push(new Dat(this.state.a, this.state.b, '$','$', 'F', memory_size)); break;\r\n                // case 'Divide': newCommandList.push(new Div(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                // case 'DecJumpNZ': newCommandList.push(new Djn(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                // case 'JumpNZ': newCommandList.push(new Jmn(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                case 'Jump': newCommandList.push(new Jmp(this.state.a, this.state.b, '$', '$', 'B', memory_size)); break;\r\n                case 'JumpZ': newCommandList.push(new Jmz(this.state.a, this.state.b, '$','$', 'B', memory_size)); break;\r\n                // case 'SkipL': newCommandList.push(new Slt(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                // case 'SkipNE': newCommandList.push(new Sne(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                // case 'Split': newCommandList.push(new Spl(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                case 'Subtract': newCommandList.push(new Sub(this.state.a, this.state.b, '$', '$', 'AB', memory_size)); break;\r\n                // case 'Modulus': newCommandList.push(new Mod(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                // case 'Multiply': newCommandList.push(new Mul(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                // case 'SkipE': newCommandList.push(new Seq(this.state.a, this.state.b, '$', '$', this.state.mod, memory_size)); break;\r\n                default: console.log('Command : ' + this.state.cmd + ' not recognized.');\r\n            }\r\n        }\r\n        else{\r\n\r\n            /* accounting for default properties - doesn't work :( */\r\n            // console.log('states a_am prior to edit'+this.state.a_am)\r\n            // // if (this.state.a_am == '') {this.setState({a_am: '$'})}\r\n            // // if (this.state.b_am == '') {this.setState({b_am: '$'})}\r\n            // console.log('states a_am post edit'+this.state.a_am)\r\n\r\n\r\n            // if (this.state.cmd === 'Jump' || this.state.cmd === 'Split'){this.setState({mod:''})}\r\n            // if (this.state.mod=== '' && (this.state.cmd==='Add' || this.state.cmd==='Subtract'||this.state.cmd==='Divide'||this.state.cmd==='Multiply'||this.state.cmd==='Modulus')){this.setState({mod:'AB'})}\r\n            // if (this.state.mod=== '' && (this.state.cmd==='Dat')){this.setState({})}\r\n            // if (this.state.mod=== '' && (this.state.cmd===)){}\r\n            // if (this.state.mod=== '' && (this.state.cmd===)){}\r\n            // if (this.state.mod=== '' && (this.state.cmd===)){}\r\n\r\n            switch (this.state.cmd){\r\n                case 'Copy': newCommandList.push(new Mov(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'Add': newCommandList.push(new Add(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'Blank': newCommandList.push(new Dat(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'Divide': newCommandList.push(new Div(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'DecJumpNZ': newCommandList.push(new Djn(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'JumpNZ': newCommandList.push(new Jmn(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'Jump': newCommandList.push(new Jmp(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'JumpZ': newCommandList.push(new Jmz(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'SkipL': newCommandList.push(new Slt(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'SkipNE': newCommandList.push(new Sne(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'Split': newCommandList.push(new Spl(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'Subtract': newCommandList.push(new Sub(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'Modulus': newCommandList.push(new Mod(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'Multiply': newCommandList.push(new Mul(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                case 'SkipE': newCommandList.push(new Seq(this.state.a, this.state.b, this.state.a_am, this.state.b_am, this.state.mod, memory_size)); break;\r\n                default: console.log('Command : ' + this.state.cmd + ' not recognized.');\r\n            }\r\n        }\r\n\r\n        // console.log('new command list.')\r\n        // console.log(newCommandList)\r\n\r\n        //reseting\r\n        this.setState({\r\n            commandList: newCommandList,\r\n            cmd:'',\r\n            a:'',\r\n            b:'',\r\n            a_am:'',\r\n            b_am:'',\r\n            mod:'',\r\n            // set other cmd values to restart\r\n        })\r\n    }\r\n\r\n    displayInput(){\r\n        if (this.state.easyMode){\r\n            return (\r\n                <div className='row'>\r\n                    {/*<div className='form-group col-3'>*/}\r\n                    {/*    /!*<input required className=\"form-control input-group-sm\" type=\"text\" placeholder='Cmd'*!/*/}\r\n                    {/*    /!*       value={this.state.cmd} onChange={this.onChangeCmd}/>*!/*/}\r\n                    {/*    <TextField className='form-control' variant=\"outlined\" label='Command' value={this.state.cmd} onChange={this.onChangeCmd} />*/}\r\n                    {/*</div>*/}\r\n\r\n                    <div className='form-group col-3'>\r\n                        <InputLabel id=\"selectCommand\">Command</InputLabel>\r\n                        <Select\r\n                            labelId=\"selectCommand\"\r\n                            id=\"selectCommand\"\r\n                            value={this.state.cmd}\r\n                            onChange={this.onChangeCmd}\r\n                            className='form-control'\r\n                        >\r\n                            <MenuItem value={'Blank'}>Blank</MenuItem>\r\n                            <MenuItem value={'Copy'}>Copy</MenuItem>\r\n                            <MenuItem value={'Add'}>Add</MenuItem>\r\n                            <MenuItem value={'Subtract'}>Subtract</MenuItem>\r\n                            <MenuItem value={'Jump'}>Jump</MenuItem>\r\n                            <MenuItem value={'JumpZ'}>JumpZ</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n\r\n                    <div className=' col-1 '></div>\r\n                    <div className='form-group col-2'>\r\n                        <TextField className='form-control' variant=\"outlined\" label='A' value={this.state.a} onChange={this.onChangea} />\r\n                    </div>\r\n                    <div className=' col-1 '></div>\r\n                    <div className='form-group col-2'>\r\n                        <TextField className='form-control' variant=\"outlined\" label='B' value={this.state.b} onChange={this.onChangeb} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='row'>\r\n                    <div className='form-group col-2 padding-1'>\r\n                        <input required className=\"form-control input-group-sm\" type=\"text\" placeholder='Cmd'\r\n                               value={this.state.cmd} onChange={this.onChangeCmd}/>\r\n                    </div>\r\n                    <div className='form-group col-1 padding-0'>\r\n                        <input type=\"text\" className=\"form-control input-group-sm\" value={this.state.mod}\r\n                               onChange={this.onChangemod}/>\r\n                    </div>\r\n                    <div className='form-group col-1 padding-0'></div>\r\n                    <div className='form-group col-1 padding-0'>\r\n                        <input type=\"text\" className=\"form-control input-group-sm\" value={this.state.a_am}\r\n                               onChange={this.onChangea_am}/>\r\n                    </div>\r\n                    <div className='form-group col-1 padding-0'>\r\n                        <input type=\"text\" required className=\"form-control input-group-sm\" placeholder='A'\r\n                               value={this.state.a} onChange={this.onChangea}/>\r\n                    </div>\r\n                    <div className='form-group col-1 padding-0'></div>\r\n                    <div className='form-group col-1 padding-0'>\r\n                        <input type=\"text\" className=\"form-control input-group-sm\" value={this.state.b_am}\r\n                               onChange={this.onChangeb_am}/>\r\n                    </div>\r\n                    <div className='form-group col-1 padding-0'>\r\n                        <input type=\"text\" required className=\"form-control input-group-sm\" placeholder='B'\r\n                               value={this.state.b} onChange={this.onChangeb}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <br />\r\n                    <div className='col-6'>\r\n                        <h1>\r\n                            Create a New Warrior\r\n                        </h1>\r\n\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <h3 className='float-right'>\r\n                            Beginner Mode\r\n                            <Switch\r\n                                checked={this.state.easyMode}\r\n                                onChange={this.onChangeMode}\r\n                                value=\"easyMode\"\r\n                                color=\"primary\"\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                            />\r\n                            Debug Mode\r\n                            <Switch\r\n                                checked={this.state.debugMode}\r\n                                onChange={this.onChangeDebugMode}\r\n                                value=\"debugMode\"\r\n                                color=\"primary\"\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                            />\r\n                        </h3>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-md-6'>\r\n                        <form onSubmit={this.onSubmitName} className='form-inline'>\r\n                            {/*<label> Warrior Name 🍭 : </label>*/}\r\n                            <TextField className='form-control ml-2 mb-2 mr-sm-2' size='small' variant=\"outlined\" label='Name Your Warrior 🍭 ' value={this.state.name} onChange={this.onChangeName} />\r\n                            {/*<input type=\"text\" required className=\"form-control ml-2 mb-2 mr-sm-2\" placeholder='New Warrior' value={this.state.name} onChange={this.onChangeName} />*/}\r\n                            <button type=\"submit\" className=\"btn btn-outline-success float-right mb-2 mr-sm-2\">✔️</button>\r\n                        </form>\r\n\r\n                        <div className=\"card shadow rounded\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title ml-2\">{this.state.name}'s Commands </h4>\r\n                                {displayChosenInstructions(this.state.commandList, this.onDeleteCommand, this.state.easyMode)}\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n\r\n                        <div className=\"card shadow rounded\">\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <h4 className=\"card-title ml-2\">Add a Command</h4>\r\n                                    <br/>\r\n                                    {this.displayInput()}\r\n\r\n\r\n                                    {/*<div className='card'>*/}\r\n                                    {/*    <div className='card-body'>*/}\r\n                                    {/*        <div className='form-inline'>*/}\r\n                                    {/*            <div className='form-group'>*/}\r\n                                    {/*                <input type=\"text\" required className=\"form-control ml-2 mb-2 mr-sm-2\" placeholder='Command: (Copy)' value={this.state.cmd} onChange={this.onChangeCmd} />*/}\r\n                                    {/*            </div>*/}\r\n                                    {/*            <div className=\"form-group\">*/}\r\n                                    {/*                <input type=\"text\" className=\"form-control ml-2 mb-2 mr-sm-2\" placeholder='Command Modifier: (I)' value={this.state.mod} onChange={this.onChangemod} />*/}\r\n                                    {/*            </div>*/}\r\n                                    {/*        </div>*/}\r\n                                    {/*    </div>*/}\r\n                                    {/*</div>*/}\r\n                                    {/*<div className='card mt-2'>*/}\r\n                                    {/*    <div className='card-body'>*/}\r\n                                    {/*        <div className='form-inline'>*/}\r\n                                    {/*            <div className=\"form-group\">*/}\r\n                                    {/*                <input type=\"text\" required className=\"form-control ml-2 mb-2 mr-sm-2\" placeholder='A Modifier: ($)' value={this.state.a_am} onChange={this.onChangea_am} />*/}\r\n                                    {/*            </div>*/}\r\n                                    {/*            <div className=\"form-group\">*/}\r\n                                    {/*                <input type=\"text\" required className=\"form-control ml-2 mb-2 mr-sm-2\" placeholder='A: (0)' value={this.state.a} onChange={this.onChangea} />*/}\r\n                                    {/*            </div>*/}\r\n                                    {/*        </div>*/}\r\n                                    {/*    </div>*/}\r\n                                    {/*</div>*/}\r\n                                    {/*<div className='card mt-2'>*/}\r\n                                    {/*    <div className='card-body'>*/}\r\n                                    {/*        <div className='form-inline'>*/}\r\n                                    {/*            <div className=\"form-group\">*/}\r\n                                    {/*                <input type=\"text\" required className=\"form-control ml-2 mb-2 mr-sm-2\" placeholder='B Modifier: ($)' value={this.state.b_am} onChange={this.onChangeb_am} />*/}\r\n                                    {/*            </div>*/}\r\n                                    {/*            <div className=\"form-group\">*/}\r\n                                    {/*                <input type=\"text\" required className=\"form-control ml-2 mb-2 mr-sm-2\" placeholder='B: (1)' value={this.state.b} onChange={this.onChangeb} />*/}\r\n                                    {/*            </div>*/}\r\n                                    {/*        </div>*/}\r\n                                    {/*    </div>*/}\r\n                                    {/*</div>*/}\r\n                                    <button type=\"submit\" className=\"btn btn-outline-success float-right mt-2 \">✔️</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <button type=\"button\" onClick={this.onSave} className=\"btn btn-outline-success float-right\">Totally Finished? Save ✔️</button>\r\n                        <br />\r\n                        <br />\r\n                        {displayCommandCard(this.state.debugMode, this.state.easyMode)}\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        {/*<h3></h3>*/}\r\n                        <PlayComponent warriorList={this.state.warriors} p2code={this.state.commandList} easyModeBool={this.state.easyMode} debugModeBool={this.state.debugMode}/>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-9'>\r\n                        <br />\r\n                        {/*<div className='card shadow rounded'>*/}\r\n                        {/*    <div className='card-body'>*/}\r\n                        {/*        <h5 className='card-title ml-2 mt-2'>Command Options</h5>*/}\r\n                        {/*        <div className='card-text'>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Copy</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Blank</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Add</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Subtract</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Multiply</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Divide</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Modulus</button>*/}\r\n                        {/*        </div>*/}\r\n                        {/*        <div className='card-text'>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Jump</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>JumpZ</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>JumpNZ</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>DecJumpNZ</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>Split</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>SkipE</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>SkipNE</button>*/}\r\n                        {/*            <button className='btn btn-outline-info ml-2 mb-2 mr-sm-2'>SkipL</button>*/}\r\n                        {/*        </div>*/}\r\n                        {/*    </div>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// importing components\nimport Navbar from \"./components/navbar.component\";\nimport Footer from './components/footer.component'\nimport indexComponent from \"./components/index.component\"\nimport WarriorsComponent from \"./components/warriors.component\"\nimport NewWarriorComponent from './components/newwarrior.component'\n// import EditWarriorComponent from './components/editwarrior.component'\n\nfunction App() {\n  return (\n        <Router>\n            <div className='container' >\n                <Navbar />\n                {/* Routing Setup*/}\n                <Route exact path=\"/\" component={indexComponent} />\n                <Route exact path=\"/play\" component={WarriorsComponent} />\n                <Route path=\"/play/new\" component={NewWarriorComponent} />\n                {/*<Route path=\"/play/edit\" component={playEditComponent} />*/}\n                <Footer />\n            </div>\n        </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}